{"version":3,"sources":["components/Header/blood.svg","components/TopBar/index.js","components/Header/index.js","components/BloodType/index.js","components/BloodTypeList/index.js","components/BloodSign/index.js","components/YouCanGive/index.js","components/App/App.js","components/App/index.js","serviceWorker.js","index.js","components/App/bkg.svg"],"names":["module","exports","Text","styled","h2","props","red","Wrapper","div","TopBar","className","style","color","as","href","target","display","Header","text","edited","split","src","blood","alt","height","width","slice","length","join","Button","button","outlined","BloodType","onClick","BloodTypeList","handleClick","useState","setOutlined","map","type","i","key","BloodSign","YouCanGive","To","bkg","App","setText","setType","sign","setSign","handleSign","s","useEffect","flexDirection","justifyContent","alignItems","Fragment","t","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6932b913.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blood.0793c3db.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Text = styled.h2`\n\tfont-style: normal;\n\tfont-weight: 200;\n\tfont-size: 18px;\n\ttext-align: center;\n\tcolor: ${props => (props.red ? \"red\" : \"#000000\")};\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nconst Wrapper = styled.div`\n\twidth: 90%;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`;\nfunction TopBar() {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Text>\n\t\t\t\tMade with&nbsp;\n\t\t\t\t<span className=\"material-icons md-18\" style={{ color: \"red\" }}>\n\t\t\t\t\tfavorite\n\t\t\t\t</span>\n\t\t\t\t&nbsp; By&nbsp;\n\t\t\t\t<Text\n\t\t\t\t\tas=\"a\"\n\t\t\t\t\thref=\"https://0had0.github.io/portfolio\"\n\t\t\t\t\ttarget=\"_blank \"\n\t\t\t\t\tred\n\t\t\t\t>\n\t\t\t\t\tHadi Houssainy\n\t\t\t\t</Text>\n\t\t\t</Text>\n\t\t\t<div style={{ display: \"flex\" }}>\n\t\t\t\t<Text\n\t\t\t\t\tas=\"a\"\n\t\t\t\t\thref=\"https://github.com/0had0/blood-donation\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t>\n\t\t\t\t\tVisit&nbsp;\n\t\t\t\t</Text>\n\t\t\t\t<span className=\"material-icons md-24\">code</span>\n\t\t\t</div>\n\t\t</Wrapper>\n\t);\n}\n\nexport default TopBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport blood from \"./blood.svg\";\n\nconst Text = styled.h2`\n\tfont-style: normal;\n\tfont-weight: 300;\n\tfont-size: 2rem;\n\ttext-align: center;\n\tcolor: #000000;\n`;\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n`;\n\nfunction Header({ text }) {\n\ttext = text ? text : \"You forgot the text prop\";\n\tlet edited = text.split(\" \");\n\treturn (\n\t\t<Wrapper>\n\t\t\t<img src={blood} alt=\"blood\" height=\"100px\" width=\"auto\" />\n\t\t\t<Text>\n\t\t\t\t{edited.slice(0, edited.length - 2).join(\" \")}\n\t\t\t\t&nbsp;\n\t\t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t\t{edited[edited.length - 2]}\n\t\t\t\t\t&nbsp;\n\t\t\t\t</span>\n\t\t\t\t{edited.slice(edited.length - 1, edited.length).join(\" \")}\n\t\t\t</Text>\n\t\t</Wrapper>\n\t);\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n\ttransition: all 0.6s ease;\n\tbackground: #ffffff;\n\tborder: ${props =>\n\t\tprops.outlined\n\t\t\t? \"4px solid #ff0000\"\n\t\t\t: \"3px solid rgba(255, 0, 0, 0.34)\"};\n\tbox-sizing: border-box;\n\tborder-radius: 13px;\n\tfont-style: normal;\n\tfont-weight: 200;\n\tfont-size: 24px;\n\ttext-align: center;\n\tcolor: #ff0000;\n\tmargin-left: 3px;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\theight: 55px;\n\twidth: 55px;\n\toutline: none;\n`;\nfunction BloodType({ text, onClick, outlined }) {\n\treturn (\n\t\t<Button onClick={onClick} outlined={outlined}>\n\t\t\t{text}\n\t\t</Button>\n\t);\n}\nexport default BloodType;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport BloodType from \"../BloodType\";\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\twidth: 250px;\n\tjustify-content: space-between;\n`;\nfunction BloodTypeList({ handleClick }) {\n\tconst types = [\"O\", \"A\", \"B\", \"AB\"];\n\tconst [outlined, setOutlined] = useState(-1);\n\treturn (\n\t\t<Wrapper>\n\t\t\t{types.map((type, i) => (\n\t\t\t\t<BloodType\n\t\t\t\t\tkey={i}\n\t\t\t\t\ttext={type}\n\t\t\t\t\toutlined={outlined === i}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thandleClick(type);\n\t\t\t\t\t\tsetOutlined(i);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</Wrapper>\n\t);\n}\nexport default BloodTypeList;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n\ttransition: all 1s ease;\n\tbackground: #ff0000;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\tborder: 0;\n\tborder-radius: 50%;\n\tfont-style: normal;\n\tfont-weight: bold;\n\tfont-size: 30px;\n\ttext-align: center;\n\tmargin: 3px;\n\tcolor: #ffffff;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\theight: 65px;\n\twidth: 65px;\n\toutline: none;\n`;\nfunction BloodSign({ text, onClick, outlined }) {\n\treturn <Button onClick={onClick}>{text}</Button>;\n}\nexport default BloodSign;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst To = type => {\n\tswitch (type) {\n\t\tcase \"O+\": {\n\t\t\treturn \"A+, B+, AB+, O+\";\n\t\t}\n\t\tcase \"O-\": {\n\t\t\treturn \"A+, A-, B+, B-, AB+, AB-, O+, O-\";\n\t\t}\n\t\tcase \"A+\": {\n\t\t\treturn \"A+, AB+\";\n\t\t}\n\t\tcase \"A-\": {\n\t\t\treturn \"A-, A+, AB-, AB+\";\n\t\t}\n\t\tcase \"B+\": {\n\t\t\treturn \"B+, AB+\";\n\t\t}\n\t\tcase \"B-\": {\n\t\t\treturn \"B+, B-, AB+, AB-\";\n\t\t}\n\t\tcase \"AB+\": {\n\t\t\treturn \"AB+\";\n\t\t}\n\t\tcase \"AB-\": {\n\t\t\treturn \"AB-\";\n\t\t}\n\t\tdefault: {\n\t\t\treturn \"You can give aliens :) !\";\n\t\t}\n\t}\n};\n\nconst Wrapper = styled.div`\n\tfont-style: normal;\n\tfont-weight: 300;\n\tfont-size: 30px;\n\ttext-align: center;\n\tcolor: #ff0000;\n`;\nfunction YouCanGive({ type }) {\n\treturn <Wrapper>{To(type)}</Wrapper>;\n}\n\nexport default YouCanGive;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport bkg from \"./bkg.svg\";\n\nimport TopBar from \"../TopBar\";\nimport Header from \"../Header\";\nimport BloodTypeList from \"../BloodTypeList\";\nimport BloodSign from \"../BloodSign\";\nimport YouCanGive from \"../YouCanGive\";\n\nconst Button = styled.button`\n\tcolor: white;\n\tbackground: red;\n\tborder-radius: 13px;\n\tfont-style: normal;\n\tfont-weight: 300;\n\tfont-size: 24px;\n\ttext-align: center;\n\tborder: 0;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\toutline: none;\n\tpadding: 10px;\n`;\n\nconst Text = styled.h2`\n\tcolor: #ff0000;\n\tfont-style: normal;\n\tfont-weight: 200;\n\tfont-size: 24px;\n\tbackground: white;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\tborder-radius: 9px;\n\tpadding: 2px 6px;\n`;\n\nconst Wrapper = styled.div`\n\tfont-family: \"Roboto\", sans-serif;\n\tfont-size: 18px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\talign-items: center;\n\twidth: 100vw;\n\theight: 100vh;\n\tbackground-image: url(${bkg});\n\tbackground-size: contain;\n\tbackground-position: bottom;\n\tbackground-repeat: no-repeat;\n`;\nfunction App() {\n\tconst [text, setText] = useState(\"What is your blood type?\");\n\tconst [type, setType] = useState(false);\n\tconst [sign, setSign] = useState(false);\n\tconst handleType = t => {\n\t\tsetType(t);\n\t};\n\tconst handleSign = s => {\n\t\tif (!type) return;\n\t\tsetSign(s);\n\t};\n\tuseEffect(() => {\n\t\tif (type && sign) setText(`${type + sign} can give to :`);\n\t}, [type, sign]);\n\treturn (\n\t\t<Wrapper>\n\t\t\t<TopBar />\n\t\t\t<Header text={text} />\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\tjustifyContent: \"space-around\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\theight: \"40%\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{type && sign ? (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<YouCanGive type={type + sign} />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetText(\"What is your blood type?\");\n\t\t\t\t\t\t\t\tsetSign(false);\n\t\t\t\t\t\t\t\tsetType(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<BloodTypeList handleClick={handleType} />\n\t\t\t\t\t\t<Text>Positive or Negative?</Text>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<BloodSign\n\t\t\t\t\t\t\t\ttext=\"+\"\n\t\t\t\t\t\t\t\tonClick={() => handleSign(\"+\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<BloodSign\n\t\t\t\t\t\t\t\ttext=\"-\"\n\t\t\t\t\t\t\t\tonClick={() => handleSign(\"-\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Wrapper>\n\t);\n}\n\nexport default App;\n","import App from \"./App\";\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/bkg.64429dc1.svg\";"],"sourceRoot":""}